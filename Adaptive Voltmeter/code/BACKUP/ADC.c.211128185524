#include"iom16v.h"
#include"macros.h"
#include"adc.h"



/*** 初始化函数 ***/
/******************************************************************************/
//多路开关配置带代码
void CD4051BC(unsigned char TEM)
{
    DDRA|=BIT(PA1);                    // PA1设为输出
    PORTA&=~BIT(PA1);                    //PA1设置为低电平
	DDRA|=BIT(PA2);                    // PA2设为输出
    PORTA&=~BIT(PA2);                    //PA2设置为低电平
	DDRA|=BIT(PA3);                    // PA3设为输出
    PORTA&=~BIT(PA3);                    //PA3设置为低电平 
switch(TEM)		//位码输出
	{
		case 1:PORTA&=~BIT(1);PORTA&=~BIT(2);PORTA&=~BIT(3);break;
		case 2:PORTA|=BIT(1);PORTA&=~BIT(2);PORTA&=~BIT(3);break;
		case 3:PORTA|=BIT(1);PORTA|=BIT(2);PORTA&=~BIT(3);break;
	}
}

//ADC配置代码

unsigned int voltage_AD(void)
{

    unsigned int addata;
    PORTA&=~BIT(PA0);                    //PORTA = 0x00; //  PA0设为输入
    DDRA&=~BIT(PA0);             //DDRA = 0x00;  
    SFIOR = 0; //连续转换模式
    ADMUX = 0x00; // ADC0单端输入 AVCC参考电压
	
    ADCSRA = 0xC0; //启动AD转换, 并开始转换
    while ((ADCSRA & 0x10) == 0); //等到转换结束
    addata = ADCL; //读取ADC数据 低位
    addata = addata + ADCH * 256; //读取ADC数据 低位 + 高位
    ADCSRA |= 0x10;
    addata = addata / 1024.0 * 5000; //计算电压
    return addata;

}
