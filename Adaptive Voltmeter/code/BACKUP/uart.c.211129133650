#include"iom16v.h"
#include"macros.h"
#include"uart.h"



/*** UART初始化函数 ***/
/******************************************************************************/

//串口初始化函数
//变量定义：接收缓冲变量，接收标志位
extern unsigned char RX_Buffer=0x00, RX_flag=0;
void USART_IO_Init(void)
{
     DDRD|=BIT(PD1);//PD1:TX为输出状态
}

//串口初始化函数
void USART_Init(void)
{
 unsigned int Temp;
 
 USART_IO_Init();
 
 UCSRA=0x00;   //串口控制器A清零
 UCSRB=0x00;   //串口控制器B清零
 UCSRC|=BIT(URSEL)|BIT(UCSZ1)|BIT(UCSZ0);  //选择USCRC，异步操作，禁止检
 
 Temp=(FXTAL/BAUD/16)-1;     //求出9600的波特率
 UBRRH=((Temp>>8)&0x00ff);  //高位赋值
 UBRRL=(Temp&0x00ff);      //低位赋值
 
 UCSRB|=BIT(TXEN)|BIT(RXEN)|BIT(RXCIE);  //发送使能，接收使能，接收完毕中断
 SREG|=BIT(7);  //全局中断使能

}
/*
//串口IO初始化函数
void Serial_PortInit(void)
{
    int BAUD;
    DDRD &= 0XFE;
    DDRD |= 0X02;

    UCSRA |= (1 << U2X);                        //倍速模式
    UCSRB |= ((1 << RXEN )|(1 << TXEN));        //发送接受使能
    UCSRB |= ( (1<< RXCIE)| (1<< TXCIE));       //发送接受结束中断使能
    UCSRB &= ~(1 << UCSZ2);
    UCSRC |= ((1 << UCSZ1)|(1 << UCSZ0));       //8位数据位
    UCSRC &= ~(1 << UMSEL);                     //异步
    UCSRC &= ~((1 << UPM1)|(1 << UPM0));        //无奇偶校验位
    UCSRC &= ~(1 << USBS);                      //1位停止位
    BAUD  = 12;                                 //波特率9600
    UBRRL = (unsigned char)BAUD;
    UBRRH = (unsigned char)(BAUD>>8);

    SREG|=BIT(7);			//开全局中断
}
*/

void USART_Send(unsigned char Date)
{
 	while(!(UCSRA&(BIT(UDRE))));  //数据寄存器UDR是否为空？
 	UDR=Date;                     //UDR赋值
 	while(!(UCSRA&(BIT(TXC))));   //数据是否已经发送完毕？
 	UCSRA|=BIT(TXC);               //清除发送完毕标志位
}
/*
//串口发送函数
void USART_Send(unsigned char Data)
{
        while(!(UCSRA&(BIT(UDRE))));        //数据寄存器UDR是否为空？
        UDR=Data;                            //UDR赋值
        while(!(UCSRA&(BIT(TXC))));            //数据是否已经发送完毕？
        UCSRA|=BIT(TXC);                    //清除发送完毕标志位
}
*/
/*
//串口接收完毕中断函数
void USARI_Received_Ir()
{
    UCSRB&=~BIT(RXCIE);     //接收完毕中断不使能
    RX_Buffer=UDR;         //读取UDR的数据
    RX_flag=1;   //接收标志位置
    UCSRB=BIT(RXCIE);//接收完毕中断使能
}
*/

/*发送字符串*/
/*
void UART_Send_String(unsigned char* str, unsigned char length)
{
      //unsigned char i=0;
     while(length--)
     {
            USART_Send(*str);
            *str++;
     }

}

//串口接收完毕中断函数
interrupt[USART_RXC] void USART_Received_Ir()
{
        UCSRB &= ~BIT(RXCIE);       //接收完毕中断不使能
        RX_buffer=UDR;              //读取UDR的数据
        if(Rx_Flag)                 //将命令存入数组
            RX_cmd[R_i++] = RX_buffer;
        if(RX_buffer == '#')
        {
            R_i = 0;
            Rx_Flag=1;
            
        }
        //if(RX_buffer == 'o')
        //lcd_puts("hello");
        //lcd_putchar(UDR);
        UCSRB |= BIT(RXCIE);        //接收完毕中断使能
}
*/

