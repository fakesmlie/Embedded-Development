#include"iom16v.h"
#include"macros.h"
#include"adc.h"



/*** 初始化函数 ***/
/******************************************************************************/

void ADC_Init(void)
{  //开关端口的配置PA1~3
    DDRA|=BIT(PA1);                    // PA1设为输出
	PORTA|=BIT(PA1);                   //  PA1输出高电平       CD4501A
                  
	DDRA|=BIT(PA2);                    // PA2设为输出
	PORTA|=BIT(PA2);                   //PA2输出高电平         CD4501B
                 
	DDRA|=BIT(PA3);                    // PA3设为输出
	PORTA|=BIT(PA3);                   //PA3输出高电平         CD4501c
	//ADC0 端口的配置
    PORTA&=~BIT(PA0); 
    DDRA&=~BIT(PA0);//输入
    SFIOR = 0; //连续转换模式 
    ADMUX = 0x00; // ADC0单端输入 AVER参考电压 2.503V


}





//多路开关配置带代码
unsigned int switch_open(unsigned int TEM)
{

    switch(TEM)		//位码输出
	{
		case 1:PORTA|=BIT(PA1);PORTA|=BIT(PA2);PORTA&=~BIT(PA3);break;
		case 2:PORTA&=~BIT(PA1);PORTA&=~BIT(PA2);PORTA&=~BIT(PA3);break;
		case 3:PORTA|=BIT(PA1);PORTA&=~BIT(PA2);PORTA&=~BIT(PA3);break;
	}
	return 1;

}

//ADC配置代码

unsigned int voltage_AD(void)
{

    unsigned int addata;
    ADCSRA = 0xC0; //启动AD转换, 并开始转换
    while ((ADCSRA & 0x10) == 0); //等到转换结束
    addata = ADCL; //读取ADC数据 低位
    addata = addata + ADCH * 256; //读取ADC数据 低位 + 高位
    ADCSRA |= 0x10;
    addata = addata / 1024.0 * 2503; //计算电压
    return addata;

}
